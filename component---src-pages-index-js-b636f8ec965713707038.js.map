{"version":3,"sources":["webpack:///./src/components/home/HomeHeaderBox.js","webpack:///./src/components/home/HomeHeader.js","webpack:///./src/components/home/HomeAPIBox.js","webpack:///./src/components/home/HomeFAQLink.js","webpack:///./src/pages/index.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["HomeHeaderBox","_ref","to","title","color","icon","children","react_default","a","createElement","gatsby_browser_entry","className","common","name","Spirit","h4","small","propTypes","PropTypes","string","isRequired","node","HomeHeader","theme","page","xl","search","isHome","home_HomeHeaderBox","HomeAPIBox","h5","HomeFAQLink","__webpack_require__","d","__webpack_exports__","pageQuery","HomePage","data","location","imageUrl","getMetaImageUrls","steps","href","apm","initApm","serviceName","serverUrl","setInitialPageLoadName","setUserContext","id","username","email","setCustomContext","testContext","Fragment","meta","type","description","image","layout","headerDividerStyle","bodyClass","mainClass","header","home_HomeHeader","h3","p","lib_default","size","activeStep","circleFontSize","defaultBorderWidth","completeColor","completeBarColor","lineMarginOffset","elevation","radius","shape","site","siteMetadata","siteUrl","pathname","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","url","resolve","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-index-js-b636f8ec965713707038.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeHeaderBox = ({ to, title, color, icon, children }) => (\n    <Link to={to} className=\"col-12 col-4-ns pa5 pa8-ns pa10-l pt8-l flex flex-column-ns items-start tdn content-stretch home-main-box-shadow db br4 bg-white\">\n        <Icon name={icon} className={`w10 h-auto w12-ns stroke-w--1-5 mr3 mb2 stroke-${color}`} />\n        <div className=\"flex flex-column justify-between flex-auto\">\n            <div>\n                <h2 className={`${Spirit.h4} mt0 mt2-ns darkgrey flex-shrink-1`}>{title}</h2>\n                <p className={`${Spirit.small} midgrey`}>{children}</p>\n            </div>\n            <span className={`${color} dib mt2 link fw5 f7 f5-ns flex items-center`}>\n                了解更多\n                <Icon name=\"arrow-right\" className={`w3 h3 ml2 fill-${color}`} />\n            </span>\n        </div>\n    </Link>\n)\n\nHomeHeaderBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeHeaderBox\n","import React from 'react'\n\nimport { SearchModal } from '../common/search'\nimport { NavBar } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\nimport HomeHeaderBox from './HomeHeaderBox'\n\n// Custom headings must be React components. You should include the <NavBar /> component\n// somewhere in it. You can optionally set the theme of the navbar to `dark` or `light`.\nconst HomeHeader = () => (\n    <div className=\"gh-bg-home bb b--whitegrey\">\n        <header className=\"top-0 left-0 right-0 z-9999\">\n            <NavBar theme=\"light\" />\n        </header>\n        <div className={`${Spirit.page.xl} pb5 pt10 pt15-ns pt20-l pb10-ns pb15-l flex flex-column items-center bt bn-ns b--white-10`}>\n            <h1 className=\"ma0 pa0 f2 f1-ns f-headline-l white header-heading-shadow\">产品企划工具包（Toolkits for Product Plan）</h1>\n            <SearchModal isHome />\n\n            <section className=\"grid-12 gutter-row-20 gutter-36-ns mt10 mt20-ns mt25-l miw-100 miw-auto-ns home-main-box-margin-ns z-999\">\n                <HomeHeaderBox\n                    to=\"/concepts/product-strategy-setting-your-strategic-vision-for-product-offerings_zh_CN\"\n                    title=\"起步\"\n                    icon=\"rocket\"\n                    color=\"purple\"\n                >\n                    产品企划（策略规划）描绘了产品最终的愿景，产品的终止之地。通过构建产品策略，你可以决定产品的努力方向。\n                </HomeHeaderBox>\n\n                <HomeHeaderBox\n                    to=\"/\"\n                    title=\"指南\"\n                    icon=\"blocks\"\n                    color=\"blue\"\n                >\n                    产品企划涉及到很多相关的主题，如：策略、市场营销、销售等。\n                </HomeHeaderBox>\n\n                <HomeHeaderBox\n                    to=\"/\"\n                    title=\"模版\"\n                    icon=\"typing\"\n                    color=\"tutorial-green\"\n                >\n                    获取产品企划相关的工作模版，包括工作检核表、流程图等。\n                </HomeHeaderBox>\n            </section>\n        </div>\n    </div>\n)\n\nexport default HomeHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\nimport { Icon } from '../common'\n\nconst HomeAPIBox = ({ to, icon, title, children }) => (\n    <Link to={to} className=\"flex items-start pa4 pa7-ns tdn bb b--whitegrey justify-between mih-10 flex-auto api-box\">\n        <span className=\"dib mr3 mt3 miw10 tc\"><Icon name={icon} className=\"stroke-middarkgrey-l2\" /></span>\n        <div className=\"flex-auto\">\n            <h4 className={`${Spirit.h5} darkgrey mt2 mt0-l`}>{title}</h4>\n            <p className={`${Spirit.small} midgrey`}>{children}</p>\n        </div>\n    </Link>\n)\n\nHomeAPIBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeAPIBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeFAQLink = ({ to, title, children }) => (\n    <Link to={to} className=\"midgrey home-faq-question link dib pt1 pb5\">\n        <h4 className={`${Spirit.h5} blue dib`}>{title} &raquo;</h4>\n        <p className={`${Spirit.small} mt0`}>{children}</p>\n    </Link>\n)\n\nHomeFAQLink.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeFAQLink\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../components/common'\nimport { Layout } from '../components/common/layout'\nimport { HomeHeader } from '../components/home'\nimport { Spirit } from '../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nimport Stepper from 'react-stepper-horizontal'\n\nimport { init as initApm } from '@elastic/apm-rum'\n\n\n\nconst HomePage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `SDC Toolkits for Product Plan `\n    const description = `Get familiar with Ghost - the open source professional publishing platform.  Install guides, tutorials, API docs and FAQs.`\n    const imageUrl = getMetaImageUrls()\n    const { steps } = {\n        steps: [{\n            title: `要卖给谁?`,\n            href: `concepts/Who_are_you_selling_to_zh_CN`,\n        }, {\n            title: `卖的是什么?`,\n            href: `concepts/What_are_you_selling_zh_CN`,\n        }, {\n            title: `有何价值?`,\n            href: `concepts/What_value_do_you_provide_your_customers_zh_CN`,\n        }, {\n            title: `如何定价?`,\n            href: `concepts/How_will_you_price_your_product_zh_CN`,\n        }, {\n            title: `如何分发?`,\n            href: `concepts/How_will_you_distribute_your_product_zh_CN`,\n        }],\n        currentStep: 0,\n    }\n\n    var apm = initApm({\n\n        // 设置所需的服务名称（允许使用的字符：a-z、A-Z、0-9、-、_ 和空格）\n        serviceName: `elstic-apm-js`,\n\n        // 设置定制 APM Server URL（默认值：http://localhost:8200）\n        serverUrl: `http://10.4.53.244:9299`,\n\n        // 设置服务版本（源地图功能要求）\n        // serviceVersion: `6.7.0`,\n    })\n\n    const context = {\n        id: `gavin`,\n        username: `wangw`,\n        email: `wangw@neusoft.com`,\n    }\n\n    apm.setInitialPageLoadName(`general-usecase-initial-page-load`)\n    apm.setUserContext(context)\n    apm.setCustomContext({ testContext: `testContext` })\n\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout\n                headerDividerStyle=\"shadow\"\n                bodyClass=\"bg-white\"\n                mainClass=\"bg-whitegrey-l2 pb-vw6 pb-vw3-ns\"\n                header={<HomeHeader/>}\n            >\n                <div className=\"pt-vw3 home-main-box-padding-ns\">\n                    <section className={`${Spirit.page.xl} col-12 mt2 mt-vw1-ns bt bn-ns b--whitegrey pt2 pt0-ns`}>\n                        <Link to=\"concepts/product-strategy-setting-your-strategic-vision-for-product-offerings_zh_CN\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>产品企划要素</Link>\n                        <p className={`${Spirit.p} mt2 midgrey flex flex-column flex-row-ns justify-between items-center-ns`}>\n                            当定义产品策略时，要明确已回答了如下问题。\n                        </p>\n                        <div>\n                            <Stepper\n                                steps={ steps }\n                                size={ 48 }\n                                activeStep={ 5 }\n                                circleFontSize={ 16 }\n                                defaultBorderWidth={ 6 }\n                                completeColor={ `#AD56B4` }\n                                completeBarColor={ `#AD56B4` }\n                                lineMarginOffset={0}/>\n                        </div>\n                    </section>\n\n                    <section className={`${Spirit.page.xl} col-12 mt8 mt-vw3-ns bt bn-ns b--whitegrey pt5 pt0-ns`}>\n                        <Link to=\"#\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>指南</Link>\n\n                        <p className={`${Spirit.p} mt2 midgrey flex flex-column flex-row-ns justify-between items-center-ns`}>\n                            产品企划涉及到很多相关的主题，如：策略、市场营销、销售等。\n                            <Link to=\"#\" className=\"blue link din nb1 mt2 mt0-ns hover-underline-blue\">\n                                <span className=\"flex items-center fw5\">了解更多指南文档<Icon name=\"arrow-right\"\n                                    className=\"w3 h3 ml1 fill-blue\"/></span>\n                            </Link>\n                        </p>\n                        <div className=\"grid-integrations-index mt4 mt6-l f8\">\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                策略\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                市场营销\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                销售\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                产品管理\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                产品研发\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                其他_1\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                其他_2\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                其他_3\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                其他_4\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                其他_5\n                            </Box>\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name=\"more\" className=\"w8 nudge-top--6\"/>\n                                了解更多\n                            </Box>\n                        </div>\n                    </section>\n\n                    <section className={`${Spirit.page.xl} col-12 mt8 mt-vw3-ns bt bn-ns b--whitegrey pt5 pt0-ns`}>\n                        <Link to=\"#\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>著作</Link>\n\n                        <p className={`${Spirit.p} mt2 midgrey flex flex-column flex-row-ns justify-between items-center-ns`}>\n                            国内外经典图书、教材等。\n                            <Link to=\"#\" className=\"blue link din nb1 mt2 mt0-ns hover-underline-blue\">\n                                <span className=\"flex items-center fw5\">了解更多著作<Icon name=\"arrow-right\"\n                                    className=\"w3 h3 ml1 fill-blue\"/></span>\n                            </Link>\n                        </p>\n                        <div className=\"grid-integrations-index mt4 mt6-l f8\">\n                            <Box to=\"concepts/ebook_kotler_marketing_mgt\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                科特勒《营销管理》(第13版)\n                            </Box>\n                            <Box to=\"concepts/ebook_mba_market_marketing\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name={`blocks`} className={`w10 h-auto w12-ns stroke-w--1-5 mb2 stroke-blue`} />\n                                MBA轻松读 - 市场营销，日本商学院\n                            </Box>\n\n                            <Box to=\"#\"\n                                className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn\"\n                                elevation=\"2\" radius=\"4\">\n                                <Icon name=\"more\" className=\"w8 nudge-top--6\"/>\n                                了解更多\n                            </Box>\n                        </div>\n                    </section>\n\n                </div>\n\n            </Layout>\n        </>\n    )\n}\n\nHomePage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://ghost.org/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://ghost.org/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.ghost.org/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.ghost.org`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}