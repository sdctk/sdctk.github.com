{"version":3,"sources":["webpack:///./src/templates/ghost/tutorial-archive.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js","webpack:///./src/components/tutorials/TutorialCard.js","webpack:///./src/components/tutorials/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagsQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_components_common_layout__WEBPACK_IMPORTED_MODULE_3__","_components_tutorials__WEBPACK_IMPORTED_MODULE_4__","_styles_spirit_styles__WEBPACK_IMPORTED_MODULE_5__","_components_common_meta__WEBPACK_IMPORTED_MODULE_6__","TutorialsTags","_ref","data","location","pageContext","posts","allGhostPost","edges","tagURL","tagName","tagDescription","tagImage","tagMetaTitle","tagMetaDescription","section","title","description","imageUrl","getMetaImageUrls","a","createElement","Fragment","type","site","siteMetadata","image","headerDividerStyle","className","Spirit","page","xl","h4","to","map","_ref2","node","key","id","post","propTypes","PropTypes","shape","siteUrl","string","isRequired","object","pathname","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","react_default","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","href","og_title","og_description","published_at","updated_at","keyword","i","twitter_title","twitter_description","meta_ImageMeta","tags","arrayOf","ArticleMetaMD","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","imageUrls","faq","integrations","tutorials","default","proptypes","meta_MetaData","meta_getMetaImageUrls","TutorialCard","substring","common","elevation","h3","p","featured","lib","autolink","separator","classes","tutorials_TutorialCard"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,IAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAUMgB,EAAgB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,YAC/BC,EAAQH,EAAKI,aAAaC,MACxBC,EAAyFJ,EAAzFI,OAAQC,EAAiFL,EAAjFK,QAASC,EAAwEN,EAAxEM,eAAgBC,EAAwDP,EAAxDO,SAAUC,EAA8CR,EAA9CQ,aAAcC,EAAgCT,EAAhCS,mBAAoBC,EAAYV,EAAZU,QAG/EC,EAAQH,GAAY,eAAmBH,EAAnB,WACpBO,EAAcH,GAAsBH,GAAtB,GACdO,EAAWN,GAAYO,YAAiBJ,GAE9C,OACIxB,EAAA6B,EAAAC,cAAA9B,EAAA6B,EAAAE,SAAA,KACI/B,EAAA6B,EAAAC,cAACrB,EAAA,EAAD,CACIG,KAAMA,EACNC,SAAUA,EACVmB,KAAK,SACLP,MAAOA,GAASb,EAAKqB,KAAKC,aAAaT,MACvCC,YAAaA,GAAed,EAAKqB,KAAKC,aAAaR,YACnDS,MAAOR,IAEX3B,EAAA6B,EAAAC,cAACxB,EAAA,EAAD,CAAQ8B,mBAAmB,UACvBpC,EAAA6B,EAAAC,cAAA,OAAKO,UAAU,gBACXrC,EAAA6B,EAAAC,cAAA,OAAKO,UAAcC,IAAOC,KAAKC,GAAjB,kCACVxC,EAAA6B,EAAAC,cAAA,MAAIO,UAAcC,IAAOG,GAAZ,sCACTzC,EAAA6B,EAAAC,cAACzB,EAAAwB,EAAD,CAAMa,GAAE,IAAMlB,EAAN,IAAkBa,UAAU,sBAApC,aACArC,EAAA6B,EAAAC,cAAA,QAAMO,UAAU,2CACZrC,EAAA6B,EAAAC,cAACzB,EAAAwB,EAAD,CAAMa,GAAIxB,EAAQmB,UAAU,kBAAkBlB,OAK9DnB,EAAA6B,EAAAC,cAAA,OAAKO,UAAcC,IAAOC,KAAKC,GAAjB,qBACVxC,EAAA6B,EAAAC,cAAA,WAASO,UAAU,qBACdtB,EAAM4B,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACP7C,EAAA6B,EAAAC,cAACvB,EAAA,EAAD,CAAcuC,IAAKD,EAAKE,GAAIC,KAAMH,EAAMR,UAAU,QAAQb,QAASA,WAS/Fd,EAAcuC,UAAY,CACtBrC,KAAMsC,IAAUC,MAAM,CAClBlB,KAAMiB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUC,MAAM,CAC1BC,QAASF,IAAUG,OAAOC,WAC1B7B,MAAOyB,IAAUG,OAAOC,WACxB5B,YAAawB,IAAUG,OAAOC,aAC/BA,aACJA,WACHtC,aAAckC,IAAUK,OAAOD,aAChCA,WACHzC,SAAUqC,IAAUC,MAAM,CACtBK,SAAUN,IAAUG,OAAOC,aAC5BA,WACHxC,YAAaoC,IAAUC,MAAM,CACzB3B,QAAS0B,IAAUG,OAAOC,WAC1BnC,QAAS+B,IAAUG,OAAOC,WAC1BpC,OAAQgC,IAAUG,OAAOC,WACzBlC,eAAgB8B,IAAUG,OAC1B9B,mBAAoB2B,IAAUG,OAC9B/B,aAAc4B,IAAUG,OACxBhC,SAAU6B,IAAUG,SACrBC,YAGQ5C,YAER,IAAMZ,EAAS,2JC5ET2D,EAAsB,SAACC,EAAeC,GAC/C,IAAIC,EAAiB,GAkBrB,OAhBID,EACAC,EAAeC,KACXH,EAAcI,QAAUJ,EAAcI,QAAU,KAChDJ,EAAcK,QAAd,uBAA+CC,IAAEC,UAAUP,EAAcK,QAA1B,KAA/C,IAA4F,KAC5FL,EAAcQ,SAAd,4BAAqDR,EAAcQ,SAAnE,IAAiF,MAGrFN,EAAeC,KAAf,qFAOJD,EAAiBI,IAAEG,QAAQP,GAEpB,CACHQ,KAAMT,EAAkBD,EAAcU,KAAjB,QACrBC,YAAaT,EAAeU,OAAf,KAA6BN,IAAEO,KAAKX,EAAP,QAA7B,KAAkE,KAC/EzB,MAAOwB,EAAkBD,EAAcc,cAAgB,OAI/Df,EAAoBgB,aAAe,CAC/Bd,iBAAiB,GAGrBF,EAAoBP,UAAY,CAC5BQ,cAAeR,IAAUC,MAAM,CAC3BiB,KAAMlB,IAAUG,OAAOC,WACvBkB,cAAetB,IAAUG,OACzBS,QAASZ,IAAUG,OACnBU,QAASb,IAAUG,OACnBa,SAAUhB,IAAUG,SACrBC,WACHK,gBAAiBT,IAAUwB,KAAKpB,YAGrBG,QCxCTkB,EAAY,SAAAhE,GAAA,IAAGwB,EAAHxB,EAAGwB,MAAH,OACdyC,EAAA/C,EAAAC,cAAC+C,EAAAhD,EAAD,KACI+C,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,eAAeU,QAAQ,wBAClCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAAS3C,IACpCyC,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,WAAWD,QAAS3C,IAEnCyC,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,iBAAiBD,QAAQ,SACxCF,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,kBAAkBD,QAAQ,UAIjDH,EAAU1B,UAAY,CAClBd,MAAOe,IAAUG,OAAOC,YAGbqB,QCVTK,EAAmB,SAAArE,GAA+E,IAA5EC,EAA4ED,EAA5EC,KAAMqE,EAAsEtE,EAAtEsE,UAAWtB,EAA2DhD,EAA3DgD,gBAAiBlC,EAA0Cd,EAA1Cc,MAAOyD,EAAmCvE,EAAnCuE,sBAAuB/C,EAAYxB,EAAZwB,MAChFgD,EAAcvE,EAAduE,UACAjD,EAAiBtB,EAAKqB,KAAtBC,aAEFkD,EAAS3B,EAAoB0B,EAAUE,eAAgB1B,GACvD2B,EAAatB,IAAErB,IAAI4C,YAAWJ,EAAW,CAAEK,WAAU,SAAYC,GAAI,SAAAC,GAAG,OAAIA,KAA/D,QACbC,EAAaL,EAAW,IAAM,CAAElB,KAAI,UAAawB,KAAI,WACrDC,EAAYX,GAAyBC,EAAUW,cAAiBX,EAAUW,cAAgB3D,EAEhG,OACIyC,EAAA/C,EAAAC,cAAA8C,EAAA/C,EAAAE,SAAA,KACI6C,EAAA/C,EAAAC,cAAC+C,EAAAhD,EAAD,KACI+C,EAAA/C,EAAAC,cAAA,aAAQqD,EAAUY,YAActE,GAAS0D,EAAU1D,OACnDmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,cAAcU,QAASK,EAAUa,kBAAoBb,EAAUc,UAC1ErB,EAAA/C,EAAAC,cAAA,QAAMoE,IAAI,YAAYC,KAAMlB,IAE5BL,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,eAAeD,QAAS5C,EAAaT,QACpDmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,UAAUU,QAAQ,YAC7BF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,WACPU,QACIK,EAAUiB,UACV3E,GACA0D,EAAUY,YACVZ,EAAU1D,QAGlBmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,iBACPU,QACIK,EAAUkB,gBACVlB,EAAUc,SACVd,EAAUa,mBAGlBpB,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,SAASD,QAASG,IACjCL,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,yBAAyBD,QAASK,EAAUmB,eAC3D1B,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,wBAAwBD,QAASK,EAAUoB,aACzDjB,EAAW3C,IAAI,SAAC6D,EAASC,GAAV,OAAiB7B,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,cAAcD,QAAS0B,EAAS1D,IAAK2D,MACrF7B,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,iBAAiBD,QAAQ,oCAExCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBACPU,QACIK,EAAUuB,eACVjF,GACA0D,EAAUY,YACVZ,EAAU1D,QAGlBmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,sBACPU,QACIK,EAAUwB,qBACVxB,EAAUc,SACVd,EAAUa,mBAGlBpB,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,cAAcU,QAASG,IAGlCL,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,iBAAiBU,QAAQ,eACpCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAASM,EAAOhB,OAC3CQ,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,iBAAiBU,QAAQ,gBACpCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAASa,IACpCf,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,eAAeU,QAAQ,cAClCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,kBAAkBU,QAAQ,cACrCF,EAAA/C,EAAAC,cAAA,UAAQE,KAAK,uBAAb,+PAMuBoD,EAAOhB,KAN9B,oCAOcgB,EAAOjD,MAAQiD,EAAOf,YAAP,aAAkCe,EAAOjD,MAAzC,kBAAkEiD,EAAOjD,MAAzE,IAAf,IAPd,kCAQciD,EAAOf,YAAP,aAAkCe,EAAOf,YAAzC,IARd,0DAUUiB,EAAWhB,OAAX,gBAAoCN,IAAEO,KAAKe,EAAP,MAApC,SAVV,2CAWuBH,EAAUY,YAActE,GAAS0D,EAAU1D,OAXlE,uCAYkBwD,EAZlB,iDAa4BE,EAAUmB,aAbtC,gDAc2BnB,EAAUoB,WAdrC,oIAiBsBV,EAjBtB,mKAqB0BV,EAAUa,kBAAoBb,EAAUc,SArBlE,2IAwBsB/D,EAAakB,QAxBnC,0EA6BJwB,EAAA/C,EAAAC,cAAC8E,EAAD,CAAWzE,MAAO0D,MAgB9Bb,EAAiBP,aAAe,CAC5Bd,iBAAiB,GAGrBqB,EAAiB/B,UAAY,CACzBrC,KAAMsC,IAAUC,MAAM,CAClBgC,UAAWjC,IAAUC,MAAM,CACvB1B,MAAOyB,IAAUG,OAAOC,WACxBgD,aAAcpD,IAAUG,OAAOC,WAC/BiD,WAAYrD,IAAUG,OAAOC,WAC7B2C,QAAS/C,IAAUG,OAAOC,WAC1ByC,WAAY7C,IAAUG,OACtB2C,iBAAkB9C,IAAUG,OAC5BgC,eAAgBnC,IAAUK,OAAOD,WACjCwC,cAAe5C,IAAUG,OACzBwD,KAAM3D,IAAU4D,QACZ5D,IAAUC,MAAM,CACZiB,KAAMlB,IAAUG,OAChBuC,KAAM1C,IAAUG,OAChBmC,WAAYtC,IAAUG,UAG9BsC,WAAYzC,IAAUC,MAAM,CACxBiB,KAAMlB,IAAUG,SAEpB+C,SAAUlD,IAAUG,OACpBgD,eAAgBnD,IAAUG,OAC1BqD,cAAexD,IAAUG,OACzBsD,oBAAqBzD,IAAUG,SAChCC,WACHrB,KAAMiB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUC,MAAM,CAC1BC,QAASF,IAAUG,OAAOC,WAC1B7B,MAAOyB,IAAUG,OAAOC,WACxB5B,YAAawB,IAAUG,OAAOC,aAC/BA,aACJA,aACJA,WACH2B,UAAW/B,IAAUG,OAAOC,WAC5BnB,MAAOe,IAAUG,OAAOC,WACxBK,gBAAiBT,IAAUwB,KAC3BjD,MAAOyB,IAAUG,OACjB6B,sBAAuBhC,IAAUwB,MAGtBM,QC1JT+B,EAAgB,SAAApG,GAAyB,IAAtBC,EAAsBD,EAAtBC,KAAMqE,EAAgBtE,EAAhBsE,UACrBjC,EAAOpC,EAAKoG,eACZC,EAAKjE,EAAKkE,YACRhF,EAAiBtB,EAAKqB,KAAtBC,aAIFiF,EAAqBF,EAAGG,KAAO,IAAIC,KAAKJ,EAAGG,MAAME,cAAgB,IAAID,KAAJ,cAAuBC,cACxF3B,EAAasB,EAAGM,UAAYN,EAAGM,SAASjD,OAAS2C,EAAGM,SAAS,GAAK,KAClE1B,EAAWjE,IAEjB,OACIgD,EAAA/C,EAAAC,cAAA8C,EAAA/C,EAAAE,SAAA,KACI6C,EAAA/C,EAAAC,cAAC+C,EAAAhD,EAAD,KACI+C,EAAA/C,EAAAC,cAAA,aAAQmF,EAAGlB,YAAckB,EAAGxF,OAC5BmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,cAAcU,QAASmC,EAAGjB,kBAAoBhD,EAAKiD,UAC9DrB,EAAA/C,EAAAC,cAAA,QAAMoE,IAAI,YAAYC,KAAMlB,IAE5BL,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,eAAeD,QAAS5C,EAAaT,QACpDmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,UAAUU,QAAQ,YAC7BF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,WAAWU,QAASmC,EAAGlB,YAAckB,EAAGxF,QACnDmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,iBAAiBU,QAASmC,EAAGjB,kBAAoBhD,EAAKiD,UACjErB,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,SAASD,QAASG,IACjCL,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,yBAAyBD,QAASqC,IAChDF,EAAGM,UAAYN,EAAGM,SAASjD,OAAS2C,EAAGM,SAAS5E,IAAI,SAAC6D,EAASC,GAAV,OAAiB7B,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,cAAcD,QAAS0B,EAAS1D,IAAK2D,MAAU,KACpI7B,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,iBAAiBD,QAAQ,oCAExCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAASmC,EAAGlB,YAAckB,EAAGxF,QACxDmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,sBAAsBU,QAASmC,EAAGjB,kBAAoBhD,EAAKiD,UACtErB,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,cAAcU,QAASG,IAClCL,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,iBAAiBU,QAAQ,iBACpCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAAY9B,EAAKwE,WAAV,cACjC7B,EAAaf,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,iBAAiBU,QAAQ,gBAAmB,KACpEa,EAAaf,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAASa,IAAiB,KACnEf,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,eAAeU,QAAQ,cAClCF,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,kBAAkBU,QAAQ,cACrCF,EAAA/C,EAAAC,cAAA,UAAQE,KAAK,uBAAb,ikBAaUiF,EAAGM,UAAYN,EAAGM,SAASjD,OAA3B,gBAAoDN,IAAEO,KAAK0C,EAAGM,SAAV,MAApD,SAbV,2CAcuBN,EAAGlB,YAAckB,EAAGxF,OAd3C,uCAekBwD,EAflB,iDAgB4BkC,EAhB5B,oIAmBsBtB,EAnBtB,mKAuB0BoB,EAAGjB,kBAAoBhD,EAAKiD,SAvBtD,2IA0BsB/D,EAAakB,QA1BnC,0EA+BJwB,EAAA/C,EAAAC,cAAC8E,EAAD,CAAWzE,MAAO0D,MAgB9BkB,EAAc9D,UAAY,CACtBrC,KAAMsC,IAAUC,MAAM,CAClB6D,eAAgB9D,IAAUC,MAAM,CAC5B+D,YAAahE,IAAUC,MAAM,CACzB1B,MAAOyB,IAAUG,OAAOC,WACxBiE,SAAUrE,IAAU4D,QAChB5D,IAAUG,QAEd0C,WAAY7C,IAAUG,OACtB2C,iBAAkB9C,IAAUG,OAC5B+D,KAAMlE,IAAUG,SACjBC,WACH2C,QAAS/C,IAAUG,OAAOC,WAC1BkE,WAAYtE,IAAUuE,SACvBnE,WACHrB,KAAMiB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUC,MAAM,CAC1BC,QAASF,IAAUG,OAAOC,WAC1B7B,MAAOyB,IAAUG,OAAOC,WACxB5B,YAAawB,IAAUG,OAAOC,aAC/BA,aACJA,aACJA,WACH2B,UAAW/B,IAAUG,OAAOC,YAGjByD,QC/GTW,EAAc,SAAA/G,GAAA,IAAGC,EAAHD,EAAGC,KAAMqE,EAATtE,EAASsE,UAAWxD,EAApBd,EAAoBc,MAAOC,EAA3Bf,EAA2Be,YAAaS,EAAxCxB,EAAwCwB,MAAOH,EAA/CrB,EAA+CqB,KAA/C,OACZ4C,EAAA/C,EAAAC,cAAA8C,EAAA/C,EAAAE,SAAA,KACI6C,EAAA/C,EAAAC,cAAC+C,EAAAhD,EAAD,KACI+C,EAAA/C,EAAAC,cAAA,aAAQL,GACRmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,cAAcU,QAASpD,IAClCkD,EAAA/C,EAAAC,cAAA,QAAMoE,IAAI,YAAYC,KAAMlB,IAC5BL,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,eAAeD,QAASlE,EAAKqB,KAAKC,aAAaT,QAC9DmD,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,UAAUD,QAAQ,YACjCF,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,WAAWD,QAASrD,IACnCmD,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,iBAAiBD,QAASpD,IACzCkD,EAAA/C,EAAAC,cAAA,QAAMiD,SAAS,SAASD,QAASG,IACjCL,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,gBAAgBU,QAASrD,IACpCmD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,sBAAsBU,QAASpD,IAC1CkD,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,cAAcU,QAASG,IAClCL,EAAA/C,EAAAC,cAAA,QAAMsC,KAAK,eAAeU,QAAQ,cAClCF,EAAA/C,EAAAC,cAAA,UAAQE,KAAK,uBAAb,0HAGmBA,GAAY,WAAJA,EAAR,wBAHnB,sCAIkBiD,EAJlB,oIAOsB9C,EAPtB,8PAasBvB,EAAKqB,KAAKC,aAAakB,QAb7C,0EAe0B1B,EAf1B,+CAmBJkD,EAAA/C,EAAAC,cAAC8E,EAAD,CAAWzE,MAAOA,MAe9BuF,EAAYzE,UAAY,CACpBrC,KAAMsC,IAAUC,MAAM,CAClBlB,KAAMiB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUC,MAAM,CAC1BC,QAASF,IAAUG,OAAOC,WAC1B7B,MAAOyB,IAAUG,OAAOC,aACzBA,aACJA,aACJA,WACH2B,UAAW/B,IAAUG,OAAOC,WAC5B7B,MAAOyB,IAAUG,OAAOC,WACxB5B,YAAawB,IAAUG,OAAOC,WAC9BnB,MAAOe,IAAUG,OAAOC,WACxBtB,KAAMkB,IAAUyE,MAAM,sBAAuBrE,YAGlCoE,QC/DTE,EAAW,SAAAjH,GASX,IARFC,EAQED,EARFC,KACAoB,EAOErB,EAPFqB,KACAP,EAMEd,EANFc,MACAC,EAKEf,EALFe,YACAS,EAIExB,EAJFwB,MACAwB,EAGEhD,EAHFgD,gBACAuB,EAEEvE,EAFFuE,sBACArE,EACEF,EADFE,SACE+B,EACoChC,GAAQ,GAAtCuE,EADNvC,EACMuC,UAAW6B,EADjBpE,EACiBoE,eACX9E,EAAiBtB,EAAKqB,KAAtBC,aAEF+C,EAAY4C,IAAIC,QAAQ5F,EAAakB,QAASvC,EAAS2C,SAA3C,KAElB,GAAQ,YAAJxB,EAAoB,CACpB,GAAImD,EACA,OACIP,EAAA/C,EAAAC,cAACiG,EAAD,CACInH,KAAMA,EACNqE,UAAWA,EACXtB,gBAAiBA,EACjBlC,MAAOA,EACPU,MAAOA,EACP+C,sBAAuBA,IAG5B,GAAI8B,EACP,OACIpC,EAAA/C,EAAAC,cAACkG,EAAD,CACIpH,KAAMA,EACNqE,UAAWA,SAIpB,GAAQ,YAAJjD,GAA0B,WAAJA,EAC7B,OACI4C,EAAA/C,EAAAC,cAACmG,EAAD,CACIrH,KAAMA,EACNqE,UAAWA,EACXxD,MAAOA,EACPC,YAAaA,EACbS,MAAOA,EACPH,KAAMA,IAKlB,OAAO,MAGX4F,EAAS3E,UAAY,CACjBrC,KAAMsC,IAAUC,MAAM,CAClBlB,KAAMiB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUC,MAAM,CAC1BC,QAASF,IAAUG,OAAOC,WAC1B7B,MAAOyB,IAAUG,OAAOC,WACxB5B,YAAawB,IAAUG,OAAOC,aAC/BA,aACJA,WACH6B,UAAWjC,IAAUK,OACrByD,eAAgB9D,IAAUK,SAC3BD,WACHzC,SAAUqC,IAAUC,MAAM,CACtBK,SAAUN,IAAUG,OAAOC,aAC5BA,WACHtB,KAAMkB,IAAUyE,MAAM,gCAAkCrE,WACxD7B,MAAOyB,IAAUG,OACjB3B,YAAawB,IAAUG,OACvBlB,MAAOe,IAAUG,OACjBM,gBAAiBT,IAAUwB,KAC3BQ,sBAAuBhC,IAAUwB,MAGtBkD,QC7ETM,EAAUC,0BAEVC,EAAY,CACdC,IAAKR,IAAIC,QAAQI,EAAZ,8BACLI,aAAcT,IAAIC,QAAQI,EAAZ,uCACdK,UAAWV,IAAIC,QAAQI,EAAZ,oCACXM,QAASX,IAAIC,QAAQI,EAAZ,gCAGAtG,EAAmB,SAACJ,GAI7B,OAAO4G,EAFP5G,EAAUA,GAAO,YAKrBI,EAAiB6G,UAAY,CACzBjH,QAAS0B,IAAUG,OAAOC,YAGf1B,QCzBflC,EAAAG,EAAAD,EAAA,sBAAA8I,IAAAhJ,EAAAG,EAAAD,EAAA,sBAAA+I,qGCOMC,EAAe,SAAAjI,GAAkC,IAA/BqC,EAA+BrC,EAA/BqC,KAAMX,EAAyB1B,EAAzB0B,UACpBwF,EAAG,IAD0ClH,EAAda,QAC5B,IAAkBwB,EAAK4C,KAAvB,IACHK,EAAUjD,EAAKiD,QAAQ3B,OAAS,IAAStB,EAAKiD,QAAQ4C,UAAU,EAAG,KAAzD,MAAqE7F,EAAKiD,QAE1F,OACIrB,EAAA/C,EAAAC,cAACgH,EAAA,EAAD,CACIpG,GAAImF,EACJxF,UAAcA,EAAL,wFACT0G,UAAU,KAEVnE,EAAA/C,EAAAC,cAAA,WACI8C,EAAA/C,EAAAC,cAAA,cACI8C,EAAA/C,EAAAC,cAAA,MAAIO,UAAcC,IAAO0G,GAAZ,iBAAgChG,EAAKvB,QAEtDmD,EAAA/C,EAAAC,cAAA,WAASO,UAAcC,IAAO2G,EAAZ,gBAA8BhD,IAEpDrB,EAAA/C,EAAAC,cAAA,UAAQO,UAAU,6CACduC,EAAA/C,EAAAC,cAAA,OAAKO,UAAU,qBACVW,EAAKkG,SAAWtE,EAAA/C,EAAAC,cAAA,QAAMO,UAAU,gFAAhB,YAAiH,KAClIuC,EAAA/C,EAAAC,cAACqH,EAAA,KAAD,CACInG,KAAMA,EACNoG,UAAU,EACVC,UAAU,GACV7D,WAAW,SACX8D,QAAQ,0EAQhCV,EAAa3F,UAAY,CACrBD,KAAME,IAAUC,MAAM,CAClB1B,MAAOyB,IAAUG,OAAOC,WACxB4F,SAAUhG,IAAUwB,KACpBmC,KAAM3D,IAAU4D,QACZ5D,IAAUC,MAAM,CACZiB,KAAMlB,IAAUG,UAGxB4C,QAAS/C,IAAUG,OAAOC,aAC3BA,WACHjB,UAAWa,IAAUG,OACrB7B,QAAS0B,IAAUG,OAAOC,YAGfsF,QCtDflJ,EAAAG,EAAAD,EAAA,sBAAA2J","file":"component---src-templates-ghost-tutorial-archive-js-d7bbfcc8c12e39e0c3cc.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport { Layout } from '../../components/common/layout'\nimport { TutorialCard } from '../../components/tutorials'\nimport { Spirit } from '../../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../../components/common/meta'\n\nconst TutorialsTags = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n    const { tagURL, tagName, tagDescription, tagImage, tagMetaTitle, tagMetaDescription, section } = pageContext\n\n    // Add meta title and description or this page here to overwrite the site meta data as set in the config\n    const title = tagMetaTitle || `Tutorials - ${tagName} - Ghost`\n    const description = tagMetaDescription || tagDescription || ``\n    const imageUrl = tagImage || getMetaImageUrls(section)\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"series\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout headerDividerStyle=\"shadow\">\n                <div className=\"bg-tutorials\">\n                    <div className={`${Spirit.page.xl} pt-vw7 pt-vw1-ns pb-vw1 white`}>\n                        <h1 className={`${Spirit.h4} gh-integration-header-shadow pl10`}>\n                            <Link to={`/${section}/`} className=\"link dim white fw3\">Tutorials</Link>\n                            <span className=\"white titleslash-white pl4 ml4 relative\">\n                                <Link to={tagURL} className=\"link dim white\">{tagName}</Link>\n                            </span>\n                        </h1>\n                    </div>\n                </div>\n                <div className={`${Spirit.page.xl} mt-vw5 mt-vw2-ns`}>\n                    <section className=\"grid-12 gutter-32\">\n                        {posts.map(({ node }) => (\n                            <TutorialCard key={node.id} post={node} className=\"col-4\" section={section} />\n                        ))}\n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nTutorialsTags.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.shape({\n        section: PropTypes.string.isRequired,\n        tagName: PropTypes.string.isRequired,\n        tagURL: PropTypes.string.isRequired,\n        tagDescription: PropTypes.string,\n        tagMetaDescription: PropTypes.string,\n        tagMetaTitle: PropTypes.string,\n        tagImage: PropTypes.string,\n    }).isRequired,\n}\n\nexport default TutorialsTags\n\nexport const tagsQuery = graphql`\n    query($tagSlug: String!) {\n        site {\n            ...SiteMetaFields\n        }\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] },\n            limit: 100,\n            filter: {tags: {elemMatch: {slug: {eq: $tagSlug}}}}\n        ) {\n            edges {\n                node {\n                    ...GhostPostListFields\n                }\n            }\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://ghost.org/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://ghost.org/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.ghost.org/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.ghost.org`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Tags } from '@tryghost/helpers-gatsby'\n\nimport { Box } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst TutorialCard = ({ post, className, section }) => {\n    const url = `/${section}/${post.slug}/`\n    const excerpt = post.excerpt.length > 200 ? `${post.excerpt.substring(0, 200)}...` : post.excerpt\n\n    return (\n        <Box\n            to={url}\n            className={`${className} pa10 pa8 flex flex-column justify-between flex-third relative tutorial-post-card tdn`}\n            elevation=\"1\"\n        >\n            <div>\n                <header>\n                    <h2 className={`${Spirit.h3} darkgrey nt2`}>{post.title}</h2>\n                </header>\n                <section className={`${Spirit.p} midgrey mt4`}>{excerpt}</section>\n            </div>\n            <footer className=\"pt2 mt6 flex justify-between items-center\">\n                <div className=\"flex items-center\">\n                    {post.featured ? <span className=\"bg-tutorial-color pa1 f-supersmall fw5 dib measure-0-2 mr2 white br2 pl3 pr3\">Featured</span> : null}\n                    <Tags\n                        post={post}\n                        autolink={false}\n                        separator=\"\"\n                        visibility=\"public\"\n                        classes=\"bg-midgrey dib word-nowrap pt1 pb1 pl2 pr2 white br2 f-supersmall\"\n                    />\n                </div>\n            </footer>\n        </Box>\n    )\n}\n\nTutorialCard.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        featured: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n            })\n        ),\n        excerpt: PropTypes.string.isRequired,\n    }).isRequired,\n    className: PropTypes.string,\n    section: PropTypes.string.isRequired,\n}\n\nexport default TutorialCard\n","export { default as TutorialCard } from './TutorialCard'\n"],"sourceRoot":""}